name=input('请输入您的姓名:')
print('你好,',name)
# python可以定义以下数据类型
'''
0x1:整数 十六进制用 0x 前缀 0-9 a-f表示

    浮点数 也就是小数 用科学计数法表示 1.23e9

    整数和浮点数在计算机内的存储方式是不同的,整数永远是精确的,浮点数可可能会四舍五入

'''
"""
0x2:字符串 是以单引号,或者双引号括起来的任意文本
    用转义符 \ 标示符号

        如果字符串里有很多字符需要转义,python允许用 r'' 标示'' 内部的字符串不转义
        如果字符串内有很多换行符,用\n 可以用  的格表示多行内容

"""
print('''你好
世界
python''')
 
"""

0x3:布尔值 true 和false两种值
        布尔值可以用and or not 运算
"""
'''
0x4:空值 用none表示.

'''


###########################################################################################

#变量 用变量名表示,必须为大小写英文.数字和_的组合,且不能用数字开头
a=1 #=号是赋值语句,可以把任意数据类型赋值给变量.同一个变量可以反复赋值,而且可以是不同类型的变量.
print(a)
a='abc'
print(a)


#常量 就是不能变的变量.通常用大写的变量名表示常量

PI=3.14149265359 #PI仍然是一个常量,大写变量名只是习惯的用法,python没有任何机制保护PI不被改变



###########################################################################################
#字符串
'''
python提供了ord()函数取字符的整数表示,chr()函数把编码转换成对应的字符
'''
print(ord('A'))    #输出65
print(chr(65))    #输出A
#如果只字符的整数编码,还可以用十六进制表示字符串
print('\u4e2d\u6587')   #输出  中文

#由于python的字符串类型是 str ,在内存中以Unicode表示,一个字符对应若干字节.如果要在网络上传输,或者保存到
#磁盘上,就需要把str变成字节为单位的bytes.
#python对bytes类型的数据用带 b 前缀的单引号或双引号表示.

z = b'ABC'

#要计算str包含多少个字符,可以用len()函数

print(len('ABC'))   #输出3
print(len('中文'))  #输出2


#!/usr/bin/env python3     #告诉Linux这是一个python可执行程序,win系统会忽略
# -*- coding utf-8 -*-     #告诉python解释器,按照utf-8编码读取源代码


##############
#格式化 %运算符用来格式化字符串. 在字符串内部,%s表示用字符串替换,%d表示用整数替换
#有几个 %? 占位符,后面就跟几个变量或者值,顺序要对应好.如果只有一个 %? ,括号可以省略

'''
%d      整数
%f      浮点数
%s      字符串
%x      十六进制
'''
#其中,格式化整数和浮点数还可以指定是否补0和整数与小数的位数.
print('%2d-%02d' % (3,1))  #输出 3-01
print('%.2f' % 3.1415926)  #输出 3.14


#如果不确定该用什么, %s 永远起作用.它会把任何数据转换成字符串.
print('年龄:%s .性别:%s' % (25,True))  #输出 年龄:25,性别:True

'''
%%表示一个%
'''
print('增长率:%d %%' % 7)  #输出增长率:7%-

# format() 用传入的参数一次替换字符串内的占位符{0},{1}...
print('你好, {0} ,你的成绩提升了 {1:.1f}%' .format('小木',17.125)) #format前加.


#练习 小明的成绩从去年的72分提升到了今年的85分，请计算小明成绩提升的百分点，
# 并用字符串格式化显示出'xx.x%'，只保留小数点后1位：
s1 = 72
s2 = 85
r = (85-72)/72*100
print('小明的成绩提升了%.1f%%' %r)


#############################################################################################
#使用list和tuple

#list是python内置的一种数据类型的列表 ,是一种有序集合,可以随时添加和删除其中的元素.
#比如 列出班里所有同学
classmates = ['小木','小树','小石']
print(classmates)

#用 len() 函数获取list元素的个数
n = len(classmates)
print(n)
#用索引的方式访问list中每个位置的元素.索引从0开始.索引超出范围会报错,如果要取最后一个元素,
# 可以使用 -1 作为索引
print(classmates[-1])

#可以使用 append方法 往list中追加元素到末尾
classmates.append('小雨')
print(classmates)
#可以用 insert 将元素插入到指定位置
classmates.insert(1,'小星')
print(classmates)
#使用 pop()的方法删除list末尾的元素
classmates.pop()
print(classmates)
#用 pop(i)方法 删除list指定位置的元素
classmates.pop(1)
print(classmates)
#用直接赋值的方法替换list指定位置的元素
classmates[1] = '小月'
print(classmates)
#list里面的元素可以是不同的数据类型,也可以是另一个list
#如果list里一个元素也没有,它的长度就是0

#tuple 有序列表,元组.tuple和list很像,但是一旦初始化就不能修改
classmates = ('小石','小花','小木')
#因为tuple不可变,所以代码更安全.
#tuple陷阱 
    #tuple定义是,tuple的元素就必须被确定下来.
    #如果定义一个空tuple,可以写成()
    #如果要定义一个只有一个元素的tuple,就要消歧义加一个 ,  t = (1,)
    #tuple所谓不变是指tuple的每个元素指向永远不变,


###################################################################
#条件判断 if
age = int(input('请输入你的年龄:')) #input输入的都当作字符串,如果需要其他书据类型,需要转换
if age >= 18:
    print('你的年龄是:',age)
    print('成年')
elif age >= 6:
    print('你的年龄是:',age)
    print('少年')
else:
    print('你的年龄是:',age)
    print('儿童')
#if语句有个特点,它是从上往下判断,如果在某个判断上是 true, 把判断对应的语句执行后,就会忽略剩下的elif和else.
###########################
# input输入的都当作字符串,如果需要其他书据类型,需要转换.
'''小明身高1.75，体重80.5kg。请根据BMI公式（体重除以身高的平方）帮小明计算他的BMI指数，并根据BMI指数：

低于18.5：过轻
18.5-25：正常
25-28：过重
28-32：肥胖
高于32：严重肥胖'''
height = float(input('请输入身高单位米:'))

weight = float(input('请输入体重单位千克:'))
bmi = weight/(height**2)
print('您的bmi值为:%.2f,' %bmi)
if bmi > 32:
    print('严重肥胖')
elif bmi >= 28:
    print('肥胖')
elif bmi >= 25:
    print('过重')
elif bmi >= 18.5:
    print('正常')
else:
    print('过轻')

##########